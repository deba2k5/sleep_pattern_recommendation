# -*- coding: utf-8 -*-
"""sleeppattern.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cZK24oa3VP3WlA9eJp4ElU8v3Hmc68X_
"""

!pip install gradio pandas matplotlib seaborn fpdf openpyxl --quiet

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from fpdf import FPDF
import gradio as gr
import tempfile
import os

def analyze_sleep(file):
    try:
        # Load Excel file
        df = pd.read_excel("/content/sleep_data_sample_4.xlsx")

        # Add pattern column
        df['Pattern'] = df.apply(
            lambda row: 'Disturbed' if row['Movement'] == 'High' or row['Heart Rate'] > 90 else 'Normal',
            axis=1
        )

        # Count patterns
        pattern_counts = df['Pattern'].value_counts().to_dict()
        disturbed_count = pattern_counts.get('Disturbed', 0)
        normal_count = pattern_counts.get('Normal', 0)

        # Create and save plot
        plt.figure(figsize=(6, 4))
        sns.countplot(x='Pattern', data=df, palette='Set2')
        plt.title("Sleep Pattern Distribution")
        plot_temp = tempfile.NamedTemporaryFile(suffix=".png", delete=False)
        plot_path = plot_temp.name
        plt.savefig(plot_path)
        plt.close()

        # Posture recommendation (without emojis)
        stomach_count = (df['Posture'] == 'Stomach').sum()
        side_count = (df['Posture'] == 'Side').sum()
        unusual_count = (df['Posture'] == 'Unusual').sum()

        if unusual_count > 0 or stomach_count > side_count:
            recommendation = "Try sleeping on your left side to improve airflow and reduce pressure on organs."
        else:
            recommendation = "Your sleep posture habits seem healthy."

        # Generate PDF (no emojis)
        pdf = FPDF()
        pdf.add_page()
        pdf.set_font("Arial", size=12)
        pdf.cell(200, 10, txt="Sleep Pattern and Posture Report", ln=True, align='C')
        pdf.ln(10)
        pdf.cell(200, 10, txt=f"Total Records: {len(df)}", ln=True)
        pdf.cell(200, 10, txt=f"Normal Sleep Count: {normal_count}", ln=True)
        pdf.cell(200, 10, txt=f"Disturbed Sleep Count: {disturbed_count}", ln=True)
        pdf.cell(200, 10, txt=f"Stomach Posture Count: {stomach_count}", ln=True)
        pdf.cell(200, 10, txt=f"Unusual Posture Count: {unusual_count}", ln=True)
        pdf.ln(5)
        pdf.multi_cell(0, 10, f"Posture Recommendation:\n{recommendation}")

        pdf.image(plot_path, x=10, y=120, w=180)

        pdf_temp = tempfile.NamedTemporaryFile(suffix=".pdf", delete=False)
        pdf_output_path = pdf_temp.name
        pdf.output(pdf_output_path)

        return plot_path, recommendation, pdf_output_path

    except Exception as e:
        return None, f"Error: {str(e)}", None

gr.Interface(
    fn=analyze_sleep,
    inputs=gr.File(label="üìÅ Upload Sleep Dataset (.xlsx)"),
    outputs=[
        gr.Image(label="üìä Sleep Pattern Plot"),
        gr.Textbox(label="üìù Posture Recommendation"),
        gr.File(label="üìÑ Download PDF Report")
    ],
    title="üõå Sleep Pattern Classifier & Posture Advisor",
    description="Upload an Excel file with sleep data. Get visualized sleep pattern analysis, posture advice, and a downloadable PDF report."
).launch()